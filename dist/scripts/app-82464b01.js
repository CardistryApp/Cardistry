"use strict";angular.module("cardistry",["ngCookies","ngTouch","ui.router","firebase","cardistry.cards","cardistry.main"]).config(["$stateProvider","$urlRouterProvider",function(a,r){a.state("lobby",{url:"/lobby",templateUrl:"app/partials/lobby.html"}).state("lobby.players",{url:"/players",templateUrl:"app/partials/lobby-players.html"}).state("lobby.rules",{url:"/rules",templateUrl:"app/partials/lobby-rules.html"}).state("lobby.invite",{url:"/invite",templateUrl:"app/partials/lobby-invite.html"}).state("player",{url:"/player",templateUrl:"app/partials/player.html"}).state("hand",{url:"/hand",templateUrl:"app/partials/player-cards.html",controller:"PlayerCtrl as players"}).state("board",{url:"/board",templateUrl:"app/partials/board.html"}),r.otherwise("/lobby")}]),angular.module("cardistry.main",["cardistry.cards","ngCookies","firebase"]).controller("MainCtrl",["Deck","$state","$stateParams","$filter","$rootScope","$cookieStore","$scope","FB",function(a,r,e,t,l,s,n,i){var o=i(),c=function(){this.deck={whiteCards:a.whiteCards,blackCards:a.blackCards},this.finalScore=10,this.turn={number:0,currentDealer:"",cardsPlayed:[]},this.players=[]},p=n.game=new c;this.firebaseSync=function(){o.$save()},this.syncUp=function(){this.firebaseSync(),r.go("player")},this.playCard=function(a,r,e,t){p.turn.cardsPlayed.push({player:this.player.name,cardId:r,cardText:e}),this.player.cards.splice(t,1),$("li#"+t).remove(),console.log(t),o.game=n.game,this.firebaseSync()};this.player=s.get("player"),this.addPlayer=function(a){this.name=a;var e=new u(a);p.players.push(e),s.put("player",e),r.go("hand"),this.player=e,o.game=n.game,this.firebaseSync()},this.log=function(){console.log(this.player)};var u=function(a,r){this.name=a,this.cards=t("limitTo")(p.deck.whiteCards,10),this.id=p.players.length+1,this.score=0,p.deck.whiteCards.splice(r,10)};console.log(p),l.game=p,l.player=s.get("player")}]).controller("PlayerCtrl",["$rootScope","$stateParams","$cookieStore",function(a,r,e){this.player=e.get("player")}]).factory("FB",["$firebase",function(a){return function(){var r=new Firebase("https://cardistry.firebaseio.com/").child("games");return a(r).$asObject()}}]),angular.module("cardistry.cards",[]).service("Deck",["$http",function(a){this.deck=[],this.whiteCards=[],this.blackCards=[];var r=this;a.get("assets/data/cards.JSON").then(function(a){angular.forEach(a.data,function(a){"A"===a.cardType?r.whiteCards.push(a):"Q"===a.cardType&&r.blackCards.push(a)}),r.deck=a.data,e(r.whiteCards),e(r.blackCards)});var e=function(a){for(var r,e,t=a.length;t;)e=Math.floor(Math.random()*t--),r=a[t],a[t]=a[e],a[e]=r;return a}}]),angular.module("cardistry.players",["cardistry.cards"]).controller("PlayerCtrl",["Game","$stateParams","$scope",function(a,r){var e=this;angular.forEach(a.players,function(a){return a.id==r.id?e.value=a:void 0})}])(function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/board.html","<!DOCTYPE><html><head></head><body><div></div></body></html>")}])})(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/lobby-invite.html",'<form ng-submit="sendText(phoneNum)"><fieldset class="form-group"><button class="btn btn-primary" type="submit">Click here to invite your friends!</button> <input id="phoneNum" type="tel" placeholder="555-555-5555" ng-model="phoneNum" class="form-control"></fieldset></form>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/lobby-players.html",'<ul id="playerList"><li ng-repeat="player in app.Players">{{player.name}}</li></ul>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/lobby-rules.html",'<p>To start the game, each player draws ten white "answer" cards. One randomly chosen player begins as the Card Czar, and plays a black "question" card. The Card Czar reads the question out to the group. Each player answers the question by passing one white "answer" card, face down, to the Card Czar. The Card Czar shuffles all of the answers, reads them out loud in a humorous fashion, and picks their favorite. Whoever played that answer gets to keep the Black Card as one Awesome Point. After each round, a new player becomes the Card Czar, and every player draws back up to ten cards.</p>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/lobby.html",'<div id="lobby" class="containr"><h1>Game Lobby</h1><ul class="col-md-4"><li><h1><a ui-sref="lobby.players">Players</a></h1></li><li><h1><a ui-sref="lobby.rules">Game Rules</a></h1></li><li><h1><a ui-sref="lobby.invite">Invite Friends</a></h1></li><li><h1><a ng-click="app.syncUp()">Start!</a></h1></li></ul><div class="col-md-8" ui-view=""></div></div>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/player-cards.html",'<div><h3>Yo, {{players.player.name}}</h3><form><ul><li ng-repeat="card in players.player.cards" id="{{$index}}">{{card.text}}<button type="submit" ng-click="app.playCard(player,card.id,card.text, $index)">Play!</button></li></ul></form></div>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("app/partials/player.html",'<form id="playerSignIn" ng-submit="app.addPlayer(name)"><input id="playerName" type="text" class="form-control" ng-model="name" placeholder="Your Name"> <button class="btn btn-primary" type="submit">Let\'s Play!</button></form>')}])}(),function(a){try{a=angular.module("cardistry")}catch(r){a=angular.module("cardistry",[])}a.run(["$templateCache",function(a){a.put("components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-inverse" ng-controller="NavbarCtrl"><div class="navbar-header"><a class="navbar-brand" href="https://github.com/Swiip/generator-gulp-angular"><span class="glyphicon glyphicon-home"></span> Gulp Angular</a></div><div class="collapse navbar-collapse" id="bs-example-navbar-collapse-6"><ul class="nav navbar-nav"><li class="active"><a ng-href="#">Home</a></li><li><a ng-href="#">About</a></li><li><a ng-href="#">Contact</a></li></ul><ul class="nav navbar-nav navbar-right"><li>Current date: {{ date | date:\'yyyy-MM-dd\' }}</li></ul></div></nav>')}])}();